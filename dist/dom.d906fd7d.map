{"version":3,"sources":["dom.js"],"names":["window","dom","create","node","container","document","createElement","innerHTML","trim","content","firstChild","after","beforNode","afterNode","parentNode","insertBefore","nextSibling","before","append","appendChild","wrap","remove","removeChild","empty","array","nodeFirstChild","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","string","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","Fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","parent","children","siblings","Array","from","filter","item","next","nextSiblingNode","nodeType","previous","previousSiblingNode","previousSibling","each","nodeList","fn","i","call","index","list"],"mappings":"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","file":"dom.d906fd7d.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n  create(node) {\n    const container = document.createElement('template');\n    container.innerHTML = node.trim();\n    return container.content.firstChild;\n  },\n  after(beforNode, afterNode) {\n    beforNode.parentNode.insertBefore(afterNode, beforNode.nextSibling);\n  },\n  before(beforNode, afterNode) {\n    beforNode.parentNode.insertBefore(afterNode, beforNode);\n  },\n  append(parentNode, node) {\n    parentNode.appendChild(node);\n  },\n  wrap(node, parentNode) {\n    dom.before(node, parentNode);\n    dom.append(parentNode, node);\n  },\n  remove(node) {\n    node.parentNode.removeChild(node)\n    return node;\n  },\n  empty(node) {\n    const array = [];\n    let nodeFirstChild = node.firstChild;\n    while (nodeFirstChild) {\n      array.push(nodeFirstChild);\n      nodeFirstChild = nodeFirstChild.firstChild;\n    }\n    return array;\n  },\n  attr(node, name, value) {\n    if(arguments.length === 3) {\n      node.setAttribute(name, value);\n    } else if(arguments.length === 2) {\n      return node.getAttribute(name);\n    }\n  },\n  text(node, string){\n    if(arguments.length ===2 ){\n      if('innerText' in node){\n        node.innerText = string; \n      }else{\n        node.textContent = string ;\n      }\n    }else if(arguments.length === 1){\n      if('innerText' in node){\n        return node.innerText;\n      }else{\n        return node.textContent;\n      }\n    }\n  },\n  html(node, string) {\n    if(arguments.length === 2){\n      node.innerHTML = string;\n    }else if(arguments.length === 1){\n      return node.innerHTML; \n    }\n  },\n  style(node, name, value) {\n    if(arguments.length === 3) {\n      node.style[name] = value;\n    } else if(arguments.length===2) {\n      if(typeof name === 'string'){\n        return node.style[name]\n      }else if(name instanceof Object){\n        const object = name;\n        for(let key in object){\n          node.style[key] = object[key];\n        }\n      }\n    }\n  },\n  class: {\n    add(node, className) {\n      node.classList.add(className);\n    },\n    remove(node, className) {\n      node.classList.remove(className);\n    },\n    has(node, className) {\n      return node.classList.contains(className);\n    }\n  },\n  on(node, eventName, Fn){\n    node.addEventListener(eventName, Fn);\n  },\n  off(node, eventName, Fn) {\n    node.removeEventListener(eventName, Fn);\n  },\n  find(selector, scope) {\n    return (scope || document).querySelectorAll(selector);\n  },\n  parent(node) {\n    return node.parentNode;\n  },\n  children(node) {\n    return node.children;\n  },\n  siblings(node) {\n    return Array.from(node.parentNode.children).filter(item => item !== node);\n  },\n  next(node) {\n    let nextSiblingNode = node.nextSibling;\n    while(nextSiblingNode && nextSiblingNode.nodeType === 3){\n      nextSiblingNode = nextSiblingNode.nextSibling\n    }\n    return nextSiblingNode;\n  },\n  previous(node) {\n    let previousSiblingNode = node.previousSibling;\n    while(previousSiblingNode && previousSiblingNode.nodeType === 3){\n      previousSiblingNode = previousSiblingNode.previousSibling;\n    }\n    return previousSiblingNode;\n  },\n  each(nodeList, fn){\n    for(let i=0;i<nodeList.length;i++){\n      fn.call(null, nodeList[i]);\n    }\n  },\n  index(node) {\n    const list = dom.children(node.parentNode);\n    let i;\n    for(i=0;i<list.length;i++){\n      if(list[i] === node){\n        break;\n      }\n    }\n    return i;\n  }\n}"]}